{
  
    
        "post0": {
            "title": "Unit 3 Sections 9 and 11",
            "content": "3.9 Video 1 . Essential Knowledge . Algorithms can be written in different ways and still accomplish the same tasks | Algorithms that appear similar can yield different side effects or results | Some conditional statements can be written as equivalent Boolean expressions | Some Boolean expressions can be written as equivalent conditional statements | Different algorithms can be developed or used to solve the same problem | . Dice Game . Do these two algorithms give the same results? . print(&quot;What did you roll on the dice?&quot;) diceRoll = int(input()) if diceRoll &gt;= 4: print(&quot;Nice roll!&quot;) else: if diceRoll &gt;= 2: print(&quot;Meh... You can do better&quot;) else: print(&quot;That was not a great roll!&quot;) . print(&quot;What did you roll on the dice?&quot;) diceRoll = int(input()) if diceRoll &gt;= 4: print(&quot;Nice roll!&quot;) if diceRoll &gt;= 2: print(&quot;Meh... You can do better&quot;) if diceRoll &lt; 2: print(&quot;That was not a great roll!&quot;) . In what instances do the algorithms yield different results for the same input? | Why does this happen? | . Can we adjust the second algorithm to yield the same results? . print(&quot;What did you roll on the dice?&quot;) diceRoll = int(input()) if diceRoll &gt;= 4: print(&quot;Nice roll!&quot;) if diceRoll &gt;= 2 and diceRoll &lt; 4: print(&quot;Meh... You can do better&quot;) if diceRoll &lt; 2: print(&quot;That was not a great roll!&quot;) . What can be taken away from this? . Small changes/mistakes can have a big impact on the result | There is often more than one way to achieve the same result | . Conditional vs Boolean . How could this conditional scenario be replaced with a boolean scenario? . | IF (isHoliday) | { school⟵false | . | } | ELSE | { IF(isWeekday) | { school⟵true | . | } | ELSE | { school⟵false | . | } | . | } | . What needs to be true and what needs to be false in order for you to go to school? . First conditional: If isHoliday is true, you do not need to go to school | Second conditional: If isWeekday is true, you do need to go to school. However, if it is false, school also becomes false | . Therefore, in pseudo code, this statement could be written as: . school⟵((NOT (isHoliday)) AND (isWeekday)) | Keep in mind that both of these statements yield the same results, and neither of them are incorrect | . More Comparing Algorithms . The algorithms below are to sum the odd numbers from 1 to 9 (1+3+5+7+9). Do they each work as intended? . sum⟵1 | counter⟵3 | REPEAT 4 TIMES | . sum⟵sum + counter | counter⟵counter + 2 - DISPLAY sum | . | sum⟵0 | counter⟵9 | REPEAT UNTIL counter &lt; 1 | . sum⟵sum + counter | counter⟵counter - 2 - DISPLAY sum | . | Why is it important to understand that algorithms can be written in different ways and still accomplish the same tasks? . 3.9 Video 2 . Essential Knowledge . Algorithms can be created from an idea, by combining existing algorithms, or by modifying existing algorithms. | . Vocab . Iteration: Repeating steps, or instructions over and over again. ( this could be also often called a loop ) | Selection: is a decision or question. At some point in an algorithm there may need to be a question because the algorithm has reached a step where one or more options are available. | . Create an Algorithm . . Create an algorithm to move the robot to the gray square for the grid of squares on the right. | The robot is represented by a triangle, which is initially facing towards the top of the grid. | The robot can move into a white or gray square but cannot move into a black region. | . Answer is hidden so you guys don’t cheat . You might notice that certain parts would be repeated if you listed all the steps. | To more easily represent the algorithm, without showing every step, we could use iteration. | By using iteration, we can better see the flow of the algorithm. | The algorithm below uses the procedure goalReached, which returns true if the robot is in gray square and returns false otherwise. | We can represent this algorithm using pseudocode . | REPEAT UNTIL (goalReached) | { MOVE_FORWARD () | ROTATE_RIGHT () | MOVE_FORWARD () | ROTATE_LEFT () | . | } | . Practice Question . Choose which algorithm that uses selection and/or iteration to determine the cost of one item in the store is correct . The display at the store says the following: . All Green Tag Items - 25% off All Red Tag Items - 60% off . Suppose that the tax on all items is 10% . Algorithm A: . DISPLAY (“What is the cost of the item?”) | cost←INPUT () | IF (greenTag) | { cost ← 0.75 * Cost | . | } | IF (redTag) | { cost ← 0.40 * Cost | . | } | cost ← 1.10 * cost | . Algorithm B: . DISPLAY (What is the cost of the item) | cost←INPUT () | IF (greenTag) | { cost ← 0.75 * Cost | . | } | IF (redTag) | { cost ← 1.10 * cost | . | } | cost ← 0.40 * Cost | . 3.9 Video 3 . Essential Knowledge . Knowledge of existing algorithms can help in constructing new ones. Some existing algorithms include: Determining the maximum or minimum value of two or more numbers. Computing the sum or average of two or more numbers. Identifying if an integer is or is not evenly divisible by another integer. Determining a robot’s path through a maze. | Using existing correct algorithms as building blocks for constructing another algorithm has benefits such as reducing development time, reduce testing, and simplifying the identification of errors. | . Vocab . Algorithm: A process or set of rules to be followed in calculations or other problem solving operations, especially by a computer. | . Another Robot Example . How can we make this work? . Create a algorithm to move the robot to the grey square for the grid above | The robot is represented by a triangle | The robot can move into white and grey squares but cannot move into a black square . | What is wrong with the algorithm above? | How do we fix this? | By allowing it to move left | . 3.11 . Learning Objective . For binary search algorithims Determine the number of iterations required to find a value in a data set. | Explain the requirements necessary to complete a binary search. | . | The binary search algorithm starts at the middle of a sorted data set of numbers and eliminates half of the data; this process repeats until the desired value is found or all elements have been eliminated. | Data must be in sorted order to use the binary search algorithm | A binary search is often more efficient than sequential/linear search when applied to sorted data. | . Essential knowledge . Imagine you had to search for a number in a huge set. How would you do it? Would you pick randomly or would you put them in order first? | . Sequential Search . For the sake of this search lets line up the numbers | It doesn’t have to be in order | In this method you go down the line to find the number you are looking for | For a Sequential Search you compare each number to the number you are searching for | If it is not the number you are looking for you move on. (inefficient method) | You can also use this method for strings as well. image(13) | . Binary Search . While using Binary Search you have to put the group of numbers from ascending or descending order | What the computer does it takes the lowest index and the highest index, adds them and then divides that value by 2. | This gets the middle value and starts the search at the middle of the group. | Go to the respective index and pull the element, if this is not the desired number then go to the left and the right to and repeat the same process for the left and the right without including the index of the middle number. (efficient method) | To put the efficiency of the binary search method into context if you have a list of 600 numbers the maximum amount of attempts it will take to get the number is 10. (1 level of tree is one search, the algorithm goes to the side of which the number is on the tree) | This method also applies to strings as well because only the indexes are getting compared. As long as the user can put it in an order (preferably alphabetical order) to tell the algorithm which side of the middle index to go to next then it is possible to use | . Practice Problems . Which is a plausable way to pattern your numbers for binary search. . a. [1,4,5,2,3] b. [24,22,23,28,30] c. [5,6,7,8,2] d. [1,2,3,4,5] . | How many checks would it take to print out 20 using sequential search . [1, 3, 4, 5, 7, 8, 10 ,20] | . | How many checks would it take to print out 30 using binary search . [1, 2, 3, 4, 6, 8, 9, 11, 30] | . | Using Binary Search how many checks would it take to find the word kiwi. . [Apple, Banana, Kiwi, Mango, Strawberry] | . | Rap . Each group has 2 minutes to write a 3 line rap about what they learned. One volunteer will rap their group’s lines and will receive a reward | . Hacks . Write this Boolean statement in the form of a conditional (if/else) statement: stayInside⟵((isCold) OR (isRaining)) . | Create an algorithm that uses selection and/or iteration that will represent one player’s complete turn. . During a turn, each player gets 4 attempts/chances to get the greatest number possible. . | During each attempt, the player will use a random number generator to select a random number from 1 to 10. . | After they have had 4 chances, their score is the greatest number they received from the random number generator, and their turn is over. . | . | Create an algorithm that will allow the arrow to reach the gray square: . | Make a binary search tree of different the list [1,2,3,4,6,9,11,69] . | Explain thorughly how to find the number 69 in the list above (use key words) . | Make a diagram explaining how you found the list (not tree, include equation) . | Put this list of strings in a order that can be used for binary search [“store”,”Market”,”Walmart”,Target”,”Ralphs”] . | Explain why Binary Search is more efficient than Sequential Search . | [64,36,16,11,9] Explain which number you are finding, how many check it would take, and make a binary search tree . | Extra question if elected official gets answer wrong: . Create two different algorithms which yield the same results | . |",
            "url": "https://haeryny.github.io/haehae/markdown/2022/12/06/3.9-11-Hacks.html",
            "relUrl": "/markdown/2022/12/06/3.9-11-Hacks.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Video 3.8-10 Hacks",
            "content": "Quiz Score . I got 9/10 right on the quiz, and I got the fourth question wrong. I got it wrong because I thought extend would add something to the list, but extend actually combines two list while append is used to add an element to the end of the list, so that is why I got it wrong. .",
            "url": "https://haeryny.github.io/haehae/week3/notes/2022/12/05/3.8-10-Hacks-and-Notes.html",
            "relUrl": "/week3/notes/2022/12/05/3.8-10-Hacks-and-Notes.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Video 3.5-7 Hacks",
            "content": "3.5 Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . A. True | . 2. 10(D) ≠ 0110(B) . B. False | . 3. 56(D) ≥ 111000(B) . A. True | . 3. 99(D) &lt; 1110011(B) . A. True | . AND Operator Value 1 Value 2 Result . 1 | 0 | 1 | . 1 | 0 | 0 | . 1 | 1 | 0 | . 1 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 0 | . 0 | 0 | 1 | . 0 | 1 | 1 | . 0 | 1 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . . # Practice with these statements print(20 == 20) # How can you change the operator to print a value of False? x = 30 y = 20 z = 10 print(x &gt; y + z) # How can this return true by only manipulating the operator? # Manipulate the variables x, y, and z to make the below statement return true print(x == z) . True False False . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;-- 75 | IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } | ELSE { DISPLAY(&quot;Nice job!&quot;) } | . Nice job! | 2. How is an if statement different from an if-else statement. . An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. | 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . If-else statement | 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . If statement | Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? 3 print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) if i == &quot;lion&quot;: # What boolean value does this statement cause? 3 print(&quot;It lives in the desert&quot;) else: print(i) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . It lives in the desert tiger wildebeest Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand! shark jellyfish blobfish raven . 3.7 Hacks . Exercise 1 . Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes | Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes | Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes | . | Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal | . InfoDb = [] # Append to List a Dictionary InfoDb.append({ &quot;foodName&quot;: &quot;Chicken Alfredo&quot;, &quot;meat&quot;: &quot;Chicken&quot;, &quot;timeToPrepare&quot;: &quot;60 minutes&quot;, }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;foodName&quot;: &quot;Cheese Quesadilla&quot;, &quot;meat&quot;: &quot;None&quot;, &quot;timeToPrepare&quot;: &quot;10 minutes&quot;, }) # Append to List a 3rd Dictionary of key/values InfoDb.append({ &quot;foodName&quot;: &quot;Beef Wellington&quot;, &quot;meat&quot;: &quot;Beef&quot;, &quot;timeToPrepare&quot;: &quot;150 minutes&quot;, }) # given and index this will print InfoDb content def print_data(d_rec): print(d_rec[&quot;foodName&quot;], &quot;Time to Prepare:&quot;, d_rec[&quot;timeToPrepare&quot;]) # using comma puts space between values print(&quot;Meat:&quot;, d_rec[&quot;meat&quot;]) # for loop iterates on length of InfoDb def for_loop(): print(&quot;&quot;) for record in InfoDb: print_data(record) for_loop() . Chicken Alfredo Time to Prepare: 60 minutes Meat: Chicken Cheese Quesadilla Time to Prepare: 10 minutes Meat: None Beef Wellington Time to Prepare: 150 minutes Meat: Beef . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don&#39;t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | . They would get 3.0. .",
            "url": "https://haeryny.github.io/haehae/week3/notes/2022/12/04/3.5-7-Hacks-and-Notes.html",
            "relUrl": "/week3/notes/2022/12/04/3.5-7-Hacks-and-Notes.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Video 3.3-4 Hacks",
            "content": "",
            "url": "https://haeryny.github.io/haehae/week2/notes/2022/12/03/3.3-4-Hacks-and-Notes.html",
            "relUrl": "/week2/notes/2022/12/03/3.3-4-Hacks-and-Notes.html",
            "date": " • Dec 3, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Video 3.1-2 Hacks",
            "content": "3.1.1 Notes . Variables and Assignments . Essential Knowledge: . A variable is an abstraction inside a program that can hold a value. Each variable has associated data storage that represents one value at a time, but that value can be a list or other collection that in turn contains multiple values. | Using meaningful variable names helps with readability of program code and understanding of what values are represented by the variables. | Some programming languages provide types to represent data, which are referenced using variables. These types include numbers, Booleans, lists, and strings. | Some values are better suited to representation using one type of datum rather than another. | . What is a variable? . An abstraction inside a program that can hold a value | . An example naming variables . You want to store the highest score you scored in a game. So, you want to call this variable highScore | You want to store a name, so you can call the variable firstName | It is also possible to store true or false in a variable. For example, the variable could be called isSunny, where true and false are stored in the variable. | phoneNumber could be a variable that stores phone numbers. | These examples are short and convenient as opposed to a long description | However, they give insight to the basic goal of the variable. | Spaces also cause a problem because it is not allowed | Dashes and numbers are also less ideal. | . Data Type examples . highScore --&gt; an integer probably doing addition or subtraction, save it as an integer or numbers. | . | firstName --&gt; text(or string) since a name is text, it should be saved as a string | . | isSunny --&gt; boolean only gives two options: true or false within variable | . | phoneNumber --&gt; text(string) no math involved just a string of numbers | . | . Practice . Question: What would be the best variable name and data type to store a user&#39;s age in a program? . Answer: name: age data type: integer | . Q: What would be the best variable name and data type to store the number of students in your class? . A: name: numStudents data type: integer to add and subtract | . Q: What would be the best variable name and data type to store the title of a movie? . A: name: movieTitle data type: text(or string) | . Q: What would be the best variable name and data type to store if someone&#39;s pet is a dog. . A: name: isDog data type: boolean | . 3.1.2 Notes . What will you learn? . You will learn how to determine the value of a variable as a result of an assignment. . Essential Knowledge . The assignment operater allows a program to change the value represented to a variable. | The exam reference sheet uses the &quot;⟵&quot; to use for assignment. For example, Text: a ⟵ expression Then the code would display a block text of &quot;a ⟵ expression&quot;. The code will evaluate expression and then assigns a copy of the result to the variable a. | The value stored in a variable will be the most recent value assigned. For example, . a ⟵ 1 | a ⟵ b | a ⟵ 2 . display(b) . | . | . The code will display 1. . Storing Values . When storing values, you assign them to a variable. . Examples: . highScore ⟵ 100 | The highScore is my assignment operator and it is storing the value of 100 inside itself as a variable. This will set my highScore to 100. | . firstName ⟵ &quot;Ashley&quot; | The firstName is the variable and the text we are storing inside is &quot;Ashley.&quot; We know that the name is in text because of the quotation marks around the assignment. | . isRaining ⟵ true | The isRaining variable has the intention to be a Boolean variable which checks true or false, but it&#39;s been assigned to store the value true. | . phoneNumber ⟵ &quot;555-0101&quot; | The phoneNumber variable and the number we are storing is &quot;555-0101&quot; The number is written within text because we are not planning to do math with this number. | . Additional Vocabulary . Elements: individual value in a list that is assigned a unique index. And elements are referenced by an index. . Index: referencing elements in a list or string using natural numbers . 3.2.2 Notes . Lists . Lists allow for data abstraction . Variables like strings, numbers, characters, and more can be bundled together | It could be empty from the start and you can add more variables as needed | If you set one list equal to another list, or transfer data from one list to another, the data will be completely replaced. | You can also append data from one list to another, keeping the old data and adding the new data. | . Key Vocabulary . list: a sequence of several variables grouped together | variable: a way of storing information in a computer program, which could later be changed, referenced, and used | data types: a set of values and operations on those values | abstract data types: a data type whose internal representation is hidden from the client | client: a program that uses a data type | objects: a structure that can take on a data-type value | Applications programming interface (API): which is a list of constructors and instance methods or operations, used to specify the behavior of an abstract data type | . Big Ideas . Lists can store any types of elements. | In all lists operations, if a list index is less than 1 or greater than the length of the list, an error message is made and the program will terminate. | Data abstraction provides a separation between the abstract properties of a data type and the concrete details of its representation. | 3.1.1 Hacks . Question 1: . The answer is 1 because it is counting a number that is changing so it is integer. | . Question 2: . The answer is 3 because it is a true or false question. | . Question 3: . The answer is 1 because it is a number that is not changing. | . Question 4: . The answer is 2 because it is too long. | . Question 5: . The answer is 1 because it is true or false. | . Question 6: . The answer is 4 because it is true statements. | . Practice Questions I made: . To check if the weather is good or not, what should it be? It is weatherGood and boolean | To record the highest test score, what should it be? It is highTestScore and string | To record the color of the phone, what should it be? It is phoneColor and string | 3.1.2 Hacks . I got the last question wrong, and that&#39;s because I forgot which order it went and that it does not repeat at all. I now know that the correct answer is because the variables have values thanks to the previous five statements. In the sixth sentence, b is given the value of x + b, which is 40. The seventh sentence gives a the value of x + 1, or 21. The value of c + d / 2 is assigned to d in the ninth sentence. Division takes priority over addition in the order of operations. The number 50 is given to d since c is 30 and d / 2 is 20. The values of a, b, c, and d are shown in the final four assertions. . Practice Questions I made: . Question 1 | . num1 &lt;- 8 . num2 &lt;- 3 . num2 &lt;- num1 + num2 . DISPLAY(num2) = 11 . Question 2 | . A &lt;- 4 . B &lt;- 5 . X &lt;- A . DISPLAY(B) = 5 . Question 3 | . Y &lt;- 1 . Z &lt;- 2 . W &lt;- Y . DISPLAY(W) = 1 . Question 4 | . T &lt;- 45 . D &lt;- 12 . X &lt;- T + D . DISPLAY(X) = 57 . Question 5 | . testA &lt;- 40 . testB &lt;- 50 . testC &lt;- 60 . testAll &lt;- testA + testB + testC . DISPLAY(testAll) = 150 . Question 6 | . labD &lt;- 1 . labE &lt;- 2 . labD &lt;- labE . DISPLAY(B) = 1 . 3.2.2 Hacks . Question 1: 7 . Question 2: 11 . Question 3: 107 . Question 4: 1100 . Question 5: 101100 . Question 6: 11111110 . Question 7: 4 . Question 8: 1 . Question 9: 3 . Question 10: 4 . Question 11: 4 . Question 12: 2 . Question 13: 3 . Question 14: 2 . Question 15: 6 .",
            "url": "https://haeryny.github.io/haehae/week2/notes/2022/12/02/3.1-2-Hacks-and-Notes.html",
            "relUrl": "/week2/notes/2022/12/02/3.1-2-Hacks-and-Notes.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Binary Hacks",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | . Binary Converter",
            "url": "https://haeryny.github.io/haehae/2022/10/28/Binary-Hacks.html",
            "relUrl": "/2022/10/28/Binary-Hacks.html",
            "date": " • Oct 28, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://haeryny.github.io/haehae/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://haeryny.github.io/haehae/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}